openapi: '3.0.2'
info:
  title: Wallet By HEI API
  description: |
    This project consists of a Java API for managing accounts, transactions, and currencies for a financial management
    application. It uses Java for the backend, a PostgreSQL database to store the data, and exposes endpoints to interact
    with this data
  version: '1.3'
servers:
  - url: https://wallet-by-HEI/v1
tags:
  - name: Currencies
    description: Endpoints related to currencies
  - name: Accounts
    description: Endpoints related to user accounts
  - name: Transactions
    description: Endpoints related to transactions
paths:
  /currency:
    get:
      tags:
        - Currencies
      summary: Retrieve all currencies
      description: Retrieve a list of available currencies
      operationId: getAllCurrencies
      responses:
        '200':
          description: A list of currencies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
        '404':
          description: Currencies not found
          content:
            application/json:
              example:
                message: 'No currencies found in the System'
    post:
      tags:
        - Currencies
      summary: Add a new currency
      description: Add a new currency to the System
      operationId: addCurrency
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCurrency'
      responses:
        '201':
          description: Currency added successfully
        '400':
          description: Invalid input
          content:
            application/json:
              example:
                message: 'Invalid currency data provided'
        '409':
          description: Currency already exists
          content:
            application/json:
              example:
                message: 'Currency with the provided name already exists'
  /accounts:
    get:
      tags:
        - Accounts
      summary: Retrieve all accounts
      description: Retrieve a list of all user accounts
      operationId: getAllAccount
      responses:
        '200':
          description: A list of account
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '404':
          description: No accounts found
          content:
            application/json:
              example:
                message: 'No accounts found in the system'
    post:
      tags:
        - Accounts
      summary: Create a new account
      description: Create a new user account
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccount'
      responses:
        '201':
          description: A list of accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: No accounts found
          content:
            application/json:
              example:
                message: 'No accounts found in the system'
    put:
      tags:
        - Accounts
      summary: Update an existing account
      description: Update an existing user account
      operationId: updateAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccount'
      responses:
        '200':
          description: Account updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: Invalid input
          content:
            application/json:
              example:
                message: 'Invalid input provided'
        '404':
          description: Account not found
          content:
            application/json:
              example:
                message: 'Account not found in the system'
  /transactions:
    get:
      tags:
        - Transactions
      summary: Retrieve all transactions
      description: Retrieve a list of all transactions
      operationId: getAllTransactions
      responses:
        '200':
          description: A list of transaction
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '404':
          description: No transaction found
          content:
            application/json:
              example:
                message: 'No transaction found in the system'
    post:
      tags:
        - Transactions
      summary: Create a new transaction
      description: Create a new transaction entry
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTransaction'
      responses:
        '201':
          description: Transaction created successfully
        '400':
          description: Invalid input
          content:
            application/json:
              example:
                message: 'Invalid transaction data provided'

components:
  schemas:
    Currency:
      type: object
      properties:
        currency_id:
          type: integer
          description: The unique identifier for the currency
        currency_name:
          type: string
          description: The name of the currency
    NewCurrency:
      type: object
      properties:
        currency_name:
          type: string
          description: The name of the new currency
    Account:
      type: object
      properties:
        account_id:
          type: integer
          description: The unique identifier for the account
        first_name:
          type: string
          description: The first name of the account holder
        last_name:
          type: string
          description: The last name of the account holder
        password:
          type: string
          description: The password for the account
        balance:
          type: number
          description: The current balance in the account
        currency_id:
          type: integer
          description: The ID of the currency associated with the account
    NewAccount:
      type: object
      properties:
        first_name:
          type: string
          description: The first name of the new account holder.
        last_name:
          type: string
          description: The last name of the new account holder.
        password:
          type: string
          description: The password for the new account.
        balance:
          type: number
          description: The initial balance for the new account.
        currency_id:
          type: integer
          description: The ID of the currency associated with the new account.
    UpdateAccount:
      type: object
      properties:
        account_id:
          type: integer
          description: The ID of the account to be updated.
        first_name:
          type: string
          description: The updated first name of the account holder.
        last_name:
          type: string
          description: The updated last name of the account holder.
        password:
          type: string
          description: The updated password for the account.
        balance:
          type: number
          format: float
          description: The updated balance in the account.
        currency_id:
          type: integer
          description: The updated ID of the currency associated with the account.
      required:
        - account_id
    Transaction:
      type: object
      properties:
        transaction_id:
          type: integer
          description: The unique identifier for the transaction
        transaction_date:
          type: string
          format: date
          description: The date of the transaction
        amount:
          type: number
          format: float
          description: The transaction amount
        description:
          type: string
          description: The description of the transaction
        account_id:
          type: integer
          description: The ID of the account associated with the transaction
    NewTransaction:
      type: object
      properties:
        transaction_date:
          type: string
          format: date
          description: The date of the new transaction.
        amount:
          type: number
          format: float
          description: The amount for the new transaction.
        description:
          type: string
          description: The description for the new transaction.
        account_id:
          type: integer
          description: The ID of the account associated with the new transaction.
